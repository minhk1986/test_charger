{"remainingRequest":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js!/home/robotics/AnhNV/agv-dasboard/node_modules/eslint-loader/index.js??ref--13-0!/home/robotics/AnhNV/agv-dasboard/src/store/modules/agvJobs/getters.js","dependencies":[{"path":"/home/robotics/AnhNV/agv-dasboard/src/store/modules/agvJobs/getters.js","mtime":1609149483632},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1602053610019},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/eslint-loader/index.js","mtime":1602053618906}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCB7IFJPUzJEIH0gZnJvbSAnQC91dGlscy9yb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0UG9zZVN0YW1wZWRUYXNrOiBmdW5jdGlvbiBnZXRQb3NlU3RhbXBlZFRhc2soc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAocGF5bG9hZCkgewogICAgICB2YXIgam9iID0gc3RhdGUuZmluZChmdW5jdGlvbiAoaikgewogICAgICAgIHJldHVybiBqLmlkID09PSBwYXlsb2FkLmpvYklkOwogICAgICB9KTsKICAgICAgaWYgKGpvYiA9PSBudWxsIHx8IGpvYi50YXNrcy5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7CiAgICAgIHZhciB0YXNrID0gbnVsbDsKCiAgICAgIGlmIChwYXlsb2FkLnRhc2tJZCA9PSBudWxsKSB7CiAgICAgICAgdGFzayA9IGpvYi50YXNrc1swXTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0YXNrID0gam9iLnRhc2tzLmZpbmQoZnVuY3Rpb24gKHQpIHsKICAgICAgICAgIHJldHVybiB0LmlkID09PSBwYXlsb2FkLnRhc2tJZDsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHRhc2sgPT0gbnVsbCkgcmV0dXJuIG51bGw7CiAgICAgIGNvbnNvbGUubG9nKHBheWxvYWQpOwogICAgICByZXR1cm4gewogICAgICAgIG9yaWVudGF0aW9uOiBST1MyRC5nbG9iYWxUaGV0YVRvUXVhdGVybmlvbih0YXNrLnRoZXRhRW5kICogTWF0aC5QSSAvIDE4MCksCiAgICAgICAgcG9zaXRpb246IHsKICAgICAgICAgIHg6IHBheWxvYWQubWFwUm9zSW5mby5vcmlnaW4ucG9zaXRpb24ueCArIHRhc2sucG9zaXRpb24ueCAqIHBheWxvYWQubWFwUm9zSW5mby5yZXNvbHV0aW9uIC8gcGF5bG9hZC5tYXBTY2FsZSwKICAgICAgICAgIHk6IHBheWxvYWQubWFwUm9zSW5mby5vcmlnaW4ucG9zaXRpb24ueSAtICh0YXNrLnBvc2l0aW9uLnkgLyBwYXlsb2FkLm1hcFNjYWxlIC0gcGF5bG9hZC5tYXBSb3NJbmZvLmhlaWdodCkgKiBwYXlsb2FkLm1hcFJvc0luZm8ucmVzb2x1dGlvbiwKICAgICAgICAgIHo6IDAKICAgICAgICB9CiAgICAgIH07CiAgICB9OwogIH0sCiAgZ2V0TGFzdFRhc2s6IGZ1bmN0aW9uIGdldExhc3RUYXNrKHN0YXRlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKGpvYklkKSB7CiAgICAgIHZhciBqb2IgPSBzdGF0ZS5maW5kKGZ1bmN0aW9uIChqKSB7CiAgICAgICAgcmV0dXJuIGouaWQgPT09IGpvYklkOwogICAgICB9KTsKICAgICAgaWYgKGpvYiA9PSBudWxsIHx8IGpvYi50YXNrcy5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7CiAgICAgIHJldHVybiBqb2IudGFza3Nbam9iLnRhc2tzLmxlbmd0aCAtIDFdOwogICAgfTsKICB9Cn07"},{"version":3,"sources":["/home/robotics/AnhNV/agv-dasboard/src/store/modules/agvJobs/getters.js"],"names":["ROS2D","getPoseStampedTask","state","payload","job","find","j","id","jobId","tasks","length","task","taskId","t","console","log","orientation","globalThetaToQuaternion","thetaEnd","Math","PI","position","x","mapRosInfo","origin","resolution","mapScale","y","height","z","getLastTask"],"mappings":";AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,eAAe;AACbC,EAAAA,kBAAkB,EAAE,4BAACC,KAAD;AAAA,WAAW,UAACC,OAAD,EAAa;AAC1C,UAAIC,GAAG,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,EAAF,KAASJ,OAAO,CAACK,KAAxB;AAAA,OAAX,CAAV;AACA,UAAIJ,GAAG,IAAI,IAAP,IAAeA,GAAG,CAACK,KAAJ,CAAUC,MAAV,IAAoB,CAAvC,EAA0C,OAAO,IAAP;AAE1C,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAIR,OAAO,CAACS,MAAR,IAAkB,IAAtB,EAA4B;AAC1BD,QAAAA,IAAI,GAAGP,GAAG,CAACK,KAAJ,CAAU,CAAV,CAAP;AACD,OAFD,MAGK;AACHE,QAAAA,IAAI,GAAGP,GAAG,CAACK,KAAJ,CAAUJ,IAAV,CAAe,UAACQ,CAAD;AAAA,iBAAOA,CAAC,CAACN,EAAF,KAASJ,OAAO,CAACS,MAAxB;AAAA,SAAf,CAAP;AACD;;AACD,UAAID,IAAI,IAAI,IAAZ,EAAkB,OAAO,IAAP;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,aAAO;AACLa,QAAAA,WAAW,EAAEhB,KAAK,CAACiB,uBAAN,CAA8BN,IAAI,CAACO,QAAL,GAAgBC,IAAI,CAACC,EAArB,GAA0B,GAAxD,CADR;AAELC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,CAAC,EAAEnB,OAAO,CAACoB,UAAR,CAAmBC,MAAnB,CAA0BH,QAA1B,CAAmCC,CAAnC,GAAuCX,IAAI,CAACU,QAAL,CAAcC,CAAd,GAAkBnB,OAAO,CAACoB,UAAR,CAAmBE,UAArC,GAAkDtB,OAAO,CAACuB,QAD5F;AAERC,UAAAA,CAAC,EAAExB,OAAO,CAACoB,UAAR,CAAmBC,MAAnB,CAA0BH,QAA1B,CAAmCM,CAAnC,GAAuC,CAAEhB,IAAI,CAACU,QAAL,CAAcM,CAAd,GAAkBxB,OAAO,CAACuB,QAA3B,GAAuCvB,OAAO,CAACoB,UAAR,CAAmBK,MAA3D,IAAqEzB,OAAO,CAACoB,UAAR,CAAmBE,UAF1H;AAGRI,UAAAA,CAAC,EAAE;AAHK;AAFL,OAAP;AAQD,KArBmB;AAAA,GADP;AAuBbC,EAAAA,WAAW,EAAE,qBAAC5B,KAAD;AAAA,WAAW,UAACM,KAAD,EAAW;AACjC,UAAIJ,GAAG,GAAGF,KAAK,CAACG,IAAN,CAAW,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,EAAF,KAASC,KAAhB;AAAA,OAAX,CAAV;AACA,UAAIJ,GAAG,IAAI,IAAP,IAAeA,GAAG,CAACK,KAAJ,CAAUC,MAAV,IAAoB,CAAvC,EAA0C,OAAO,IAAP;AAC1C,aAAON,GAAG,CAACK,KAAJ,CAAUL,GAAG,CAACK,KAAJ,CAAUC,MAAV,GAAmB,CAA7B,CAAP;AACD,KAJY;AAAA;AAvBA,CAAf","sourcesContent":["import { ROS2D } from '@/utils/ros';\nexport default {\n  getPoseStampedTask: (state) => (payload) => {\n    let job = state.find((j) => j.id === payload.jobId);\n    if (job == null || job.tasks.length == 0) return null;\n\n    let task = null;\n    if (payload.taskId == null) {\n      task = job.tasks[0];\n    }\n    else {\n      task = job.tasks.find((t) => t.id === payload.taskId);\n    }\n    if (task == null) return null;\n    console.log(payload);\n    return {\n      orientation: ROS2D.globalThetaToQuaternion(task.thetaEnd * Math.PI / 180),\n      position: {\n        x: payload.mapRosInfo.origin.position.x + task.position.x * payload.mapRosInfo.resolution / payload.mapScale,\n        y: payload.mapRosInfo.origin.position.y - ((task.position.y / payload.mapScale) - payload.mapRosInfo.height) * payload.mapRosInfo.resolution,\n        z: 0,\n      },\n    };\n  },\n  getLastTask: (state) => (jobId) => {\n    let job = state.find((j) => j.id === jobId);\n    if (job == null || job.tasks.length == 0) return null;\n    return job.tasks[job.tasks.length - 1];\n  }\n}"]}]}