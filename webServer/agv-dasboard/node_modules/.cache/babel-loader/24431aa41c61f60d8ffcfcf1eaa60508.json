{"remainingRequest":"/home/robotics/AnhNV/agv-dasboard/node_modules/thread-loader/dist/cjs.js!/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js!/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robotics/AnhNV/agv-dasboard/src/components/WayAgvToTaskPosition/WayAgvToTaskPosition.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robotics/AnhNV/agv-dasboard/src/components/WayAgvToTaskPosition/WayAgvToTaskPosition.vue","mtime":1609149482228},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/thread-loader/dist/cjs.js","mtime":1602053610301},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1602053610019},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js","mtime":1602053621134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL3JvYm90aWNzL0FuaE5WL2Fndi1kYXNib2FyZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzIH0gZnJvbSAidnVleCI7Cgp2YXIgX2NyZWF0ZU5hbWVzcGFjZWRIZWxwID0gY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMoImFndnMiKSwKICAgIGFndnNNYXBTdGF0ZSA9IF9jcmVhdGVOYW1lc3BhY2VkSGVscC5tYXBTdGF0ZTsKCnZhciBfY3JlYXRlTmFtZXNwYWNlZEhlbHAyID0gY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMoImFndkpvYnMiKSwKICAgIGFndkpvYnNNYXBTdGF0ZSA9IF9jcmVhdGVOYW1lc3BhY2VkSGVscDIubWFwU3RhdGU7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIldheUFndlRvVGFza1Bvc2l0aW9uIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zaXRpb25YMTogMCwKICAgICAgcG9zaXRpb25ZMTogMCwKICAgICAgcG9zaXRpb25YMjogMCwKICAgICAgcG9zaXRpb25ZMjogMAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBhZ3ZJZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIiCiAgICB9CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBhZ3ZzTWFwU3RhdGUoewogICAgam9iSWQ6IGZ1bmN0aW9uIGpvYklkKHN0YXRlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgYWd2ID0gc3RhdGUuZmluZChmdW5jdGlvbiAoYSkgewogICAgICAgIHJldHVybiBhLmlkID09PSBfdGhpcy5hZ3ZJZDsKICAgICAgfSk7CiAgICAgIHJldHVybiBhZ3YgIT0gbnVsbCA/IGFndi5qb2JJZCA6ICIiOwogICAgfSwKICAgIHRhc2tJZDogZnVuY3Rpb24gdGFza0lkKHN0YXRlKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGFndiA9IHN0YXRlLmZpbmQoZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gYS5pZCA9PT0gX3RoaXMyLmFndklkOwogICAgICB9KTsKICAgICAgcmV0dXJuIGFndiAhPSBudWxsID8gYWd2LnRhc2tJZCA6ICIiOwogICAgfSwKICAgIHN0YXJ0V2F5UG9pbnQ6IGZ1bmN0aW9uIHN0YXJ0V2F5UG9pbnQoc3RhdGUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgYWd2ID0gc3RhdGUuZmluZChmdW5jdGlvbiAoYSkgewogICAgICAgIHJldHVybiBhLmlkID09PSBfdGhpczMuYWd2SWQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gYWd2ICE9IG51bGwgPyBhZ3Yud2ViUG9zZS5wb3NpdGlvbiA6IHsKICAgICAgICB4OiAwLAogICAgICAgIHk6IDAsCiAgICAgICAgejogMAogICAgICB9OwogICAgfQogIH0pKSwgYWd2Sm9ic01hcFN0YXRlKHsKICAgIGVuZFdheVBvaW50OiBmdW5jdGlvbiBlbmRXYXlQb2ludChzdGF0ZSkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciBqb2IgPSBzdGF0ZS5maW5kKGZ1bmN0aW9uIChqKSB7CiAgICAgICAgcmV0dXJuIGouaWQgPT09IF90aGlzNC5qb2JJZDsKICAgICAgfSk7CiAgICAgIGlmIChqb2IgPT0gbnVsbCB8fCBqb2IudGFza3MubGVuZ3RoID09IDApIHJldHVybiBudWxsOwogICAgICB2YXIgdGFzayA9IGpvYi50YXNrcy5maW5kKGZ1bmN0aW9uICh0KSB7CiAgICAgICAgcmV0dXJuIHQuaWQgPT09IF90aGlzNC50YXNrSWQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gdGFzayAhPSBudWxsID8gdGFzay5wb3NpdGlvbiA6IGpvYi50YXNrc1swXS5wb3NpdGlvbjsKICAgIH0KICB9KSksCiAgd2F0Y2g6IHsKICAgIHN0YXJ0V2F5UG9pbnQ6IGZ1bmN0aW9uIHN0YXJ0V2F5UG9pbnQodmFsKSB7CiAgICAgIHZhciBwb3NpdGlvbiA9IHsKICAgICAgICB4OiBNYXRoLmZsb29yKHZhbC54KSwKICAgICAgICB5OiBNYXRoLmZsb29yKHZhbC55KQogICAgICB9OwogICAgICB0aGlzLnBvc2l0aW9uWDEgPSBwb3NpdGlvbi54OwogICAgICB0aGlzLnBvc2l0aW9uWTEgPSBwb3NpdGlvbi55OwoKICAgICAgaWYgKHRoaXMuZW5kV2F5UG9pbnQgPT0gbnVsbCkgewogICAgICAgIHRoaXMucG9zaXRpb25YMiA9IHBvc2l0aW9uLng7CiAgICAgICAgdGhpcy5wb3NpdGlvblkyID0gcG9zaXRpb24ueTsKICAgICAgfQogICAgfSwKICAgIGVuZFdheVBvaW50OiBmdW5jdGlvbiBlbmRXYXlQb2ludCh2YWwpIHsKICAgICAgaWYgKHZhbCA9PSBudWxsKSB7CiAgICAgICAgdGhpcy5wb3NpdGlvblgyID0gTWF0aC5mbG9vcih0aGlzLnN0YXJ0V2F5UG9pbnQueCk7CiAgICAgICAgdGhpcy5wb3NpdGlvblkyID0gTWF0aC5mbG9vcih0aGlzLnN0YXJ0V2F5UG9pbnQueSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wb3NpdGlvblgyID0gTWF0aC5mbG9vcih2YWwueCk7CiAgICAgICAgdGhpcy5wb3NpdGlvblkyID0gTWF0aC5mbG9vcih2YWwueSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnBvc2l0aW9uWDEgPSBNYXRoLmZsb29yKHRoaXMuc3RhcnRXYXlQb2ludC54KTsKICAgIHRoaXMucG9zaXRpb25ZMSA9IE1hdGguZmxvb3IodGhpcy5zdGFydFdheVBvaW50LnkpOwoKICAgIGlmICh0aGlzLmVuZFdheVBvaW50ID09IG51bGwpIHsKICAgICAgdGhpcy5wb3NpdGlvblgyID0gTWF0aC5mbG9vcih0aGlzLnN0YXJ0V2F5UG9pbnQueCk7CiAgICAgIHRoaXMucG9zaXRpb25ZMiA9IE1hdGguZmxvb3IodGhpcy5zdGFydFdheVBvaW50LnkpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5wb3NpdGlvblgyID0gTWF0aC5mbG9vcih0aGlzLmVuZFdheVBvaW50LngpOwogICAgICB0aGlzLnBvc2l0aW9uWTIgPSBNYXRoLmZsb29yKHRoaXMuZW5kV2F5UG9pbnQueSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["WayAgvToTaskPosition.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <g>\n    <line\n      :x1=\"positionX1\"\n      :y1=\"positionY1\"\n      :x2=\"positionX2\"\n      :y2=\"positionY2\"\n      stroke-dasharray=\"10,5\"\n      style=\"stroke: red; stroke-width: 5\"\n    />\n  </g>\n</template>\n<script>\nimport { createNamespacedHelpers } from \"vuex\";\nconst { mapState: agvsMapState } = createNamespacedHelpers(\"agvs\");\nconst { mapState: agvJobsMapState } = createNamespacedHelpers(\"agvJobs\");\n\nexport default {\n  name: \"WayAgvToTaskPosition\",\n  data() {\n    return {\n      positionX1: 0,\n      positionY1: 0,\n      positionX2: 0,\n      positionY2: 0,\n    };\n  },\n  props: {\n    agvId: {\n      type: String,\n      default: \"\",\n    },\n  },\n  computed: {\n    ...agvsMapState({\n      jobId(state) {\n        let agv = state.find((a) => a.id === this.agvId);\n        return agv != null ? agv.jobId : \"\";\n      },\n      taskId(state) {\n        let agv = state.find((a) => a.id === this.agvId);\n        return agv != null ? agv.taskId : \"\";\n      },\n      startWayPoint(state) {\n        let agv = state.find((a) => a.id === this.agvId);\n        return agv != null ? agv.webPose.position : { x: 0, y: 0, z: 0 };\n      },\n    }),\n    ...agvJobsMapState({\n      endWayPoint(state) {\n        let job = state.find((j) => j.id === this.jobId);\n        if (job == null || job.tasks.length == 0) return null;\n        let task = job.tasks.find((t) => t.id === this.taskId);\n        return task != null ? task.position : job.tasks[0].position;\n      },\n    }),\n  },\n  watch: {\n    startWayPoint(val) {\n      let position = {\n        x: Math.floor(val.x),\n        y: Math.floor(val.y),\n      };\n      this.positionX1 = position.x;\n      this.positionY1 = position.y;\n      if (this.endWayPoint == null) {\n        this.positionX2 = position.x;\n        this.positionY2 = position.y;\n      }\n    },\n    endWayPoint(val) {\n      if (val == null) {\n        this.positionX2 = Math.floor(this.startWayPoint.x);\n        this.positionY2 = Math.floor(this.startWayPoint.y);\n      } else {\n        this.positionX2 = Math.floor(val.x);\n        this.positionY2 = Math.floor(val.y);\n      }\n    },\n  },\n  mounted() {\n    this.positionX1 = Math.floor(this.startWayPoint.x);\n    this.positionY1 = Math.floor(this.startWayPoint.y);\n    if (this.endWayPoint == null) {\n      this.positionX2 = Math.floor(this.startWayPoint.x);\n      this.positionY2 = Math.floor(this.startWayPoint.y);\n    } else {\n      this.positionX2 = Math.floor(this.endWayPoint.x);\n      this.positionY2 = Math.floor(this.endWayPoint.y);\n    }\n  },\n};\n</script>"],"sourceRoot":"src/components/WayAgvToTaskPosition"}]}