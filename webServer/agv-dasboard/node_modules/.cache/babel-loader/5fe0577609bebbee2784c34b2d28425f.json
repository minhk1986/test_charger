{"remainingRequest":"/home/robotics/AnhNV/agv-dasboard/node_modules/thread-loader/dist/cjs.js!/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js!/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robotics/AnhNV/agv-dasboard/src/views/dashboard/Setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robotics/AnhNV/agv-dasboard/src/views/dashboard/Setting.vue","mtime":1609149486052},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/thread-loader/dist/cjs.js","mtime":1602053610301},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1602053610019},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js","mtime":1602053621134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvcm9ib3RpY3MvQW5oTlYvYWd2LWRhc2JvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IFNldHRpbmdDb21wb25lbnQgZnJvbSAiQC9jb21wb25lbnRzL1NldHRpbmdDb21wb25lbnQiOwppbXBvcnQgU2V0dGluZ0dyb3VwQ29tcG9uZW50IGZyb20gIkAvY29tcG9uZW50cy9TZXR0aW5nR3JvdXBDb21wb25lbnQiOwoKdmFyIF9jcmVhdGVOYW1lc3BhY2VkSGVscCA9IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzKCJzZXR0aW5ncyIpLAogICAgbWFwU3RhdGUgPSBfY3JlYXRlTmFtZXNwYWNlZEhlbHAubWFwU3RhdGU7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNldHRpbmciLAogIGNvbXBvbmVudHM6IHsKICAgIFNldHRpbmdDb21wb25lbnQ6IFNldHRpbmdDb21wb25lbnQsCiAgICBTZXR0aW5nR3JvdXBDb21wb25lbnQ6IFNldHRpbmdHcm91cENvbXBvbmVudAogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKHsKICAgIHNldHRpbmdNZXRhOiBmdW5jdGlvbiBzZXR0aW5nTWV0YShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2V0dGluZ3M7CiAgICB9CiAgfSkpCn07"},{"version":3,"sources":["Setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,uBAAA,QAAA,MAAA;AACA,OAAA,gBAAA,MAAA,+BAAA;AACA,OAAA,qBAAA,MAAA,oCAAA;;4BACA,uBAAA,CAAA,UAAA,C;IAAA,Q,yBAAA,Q;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA,gBADA;AAEA,IAAA,qBAAA,EAAA;AAFA,GAFA;AAMA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,WAAA,EAAA,qBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,QAAA;AAAA;AADA,GAAA,CADA;AANA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row>\n      <v-col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\">\n        <v-list>\n          <template v-for=\"(setting, index) in settingMeta\">\n            <SettingGroupComponent\n              v-if=\"setting.type === 'group'\"\n              :key=\"`setting-group-${setting.text}-${index}`\"\n              :pathStore=\"[...setting.pathStore]\"\n              :text=\"setting.text\"\n              :settings=\"setting.settings\"\n            />\n            <SettingComponent\n              v-else\n              :pathStore=\"[...setting.pathStore]\"\n              :text=\"setting.text\"\n              :type=\"setting.type\"\n              :unit=\"setting.unit\"\n              :step=\"setting.step\"\n              :key=\"`setting-component-${setting.text}-${index}`\"\n            />\n          </template>\n        </v-list>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { createNamespacedHelpers } from \"vuex\";\nimport SettingComponent from \"@/components/SettingComponent\";\nimport SettingGroupComponent from \"@/components/SettingGroupComponent\";\nconst { mapState } = createNamespacedHelpers(\"settings\");\nexport default {\n  name: \"Setting\",\n  components: {\n    SettingComponent,\n    SettingGroupComponent,\n  },\n  computed: {\n    ...mapState({\n      settingMeta: (state) => state.settings,\n    }),\n  },\n};\n</script>\n"],"sourceRoot":"src/views/dashboard"}]}