{"remainingRequest":"/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/src/components/SettingGroupComponent/SettingGroupComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/src/components/SettingGroupComponent/SettingGroupComponent.vue","mtime":1609316939488},{"path":"/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1609316939616},{"path":"/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1609316939572},{"path":"/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1609316939616},{"path":"/home/robotics/TungNV/agv_v2_ws/src/agv_v2/webServer/agv-dasboard/node_modules/vue-loader/lib/index.js","mtime":1609316942712}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CmltcG9ydCBTZXR0aW5nQ29tcG9uZW50IGZyb20gIkAvY29tcG9uZW50cy9TZXR0aW5nQ29tcG9uZW50IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTZXR0aW5nR3JvdXBDb21wb25lbnQiLAogIGNvbXBvbmVudHM6IHsKICAgIFNldHRpbmdDb21wb25lbnQsCiAgfSwKICBwcm9wczogewogICAgcGF0aFN0b3JlOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXSwKICAgIH0sCiAgICB0ZXh0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICB9LAogICAgc2V0dGluZ3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLAogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["SettingGroupComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SettingGroupComponent.vue","sourceRoot":"src/components/SettingGroupComponent","sourcesContent":["<template>\n  <v-list-group :value=\"false\" no-action sub-group>\n    <template v-slot:activator>\n      <v-list-item-content>\n        <v-list-item-title>{{ text }}</v-list-item-title>\n      </v-list-item-content>\n    </template>\n    <template v-for=\"(setting, index) in settings\">\n      <SettingGroupComponent\n        v-if=\"setting.type === 'group'\"\n        :key=\"`setting-group-${text}-${index}`\"\n        :pathStore=\"[...pathStore,...setting.pathStore]\"\n        :text=\"setting.text\"\n        :settings=\"setting.settings\"\n      />\n      <SettingComponent\n        v-else\n        :pathStore=\"[...pathStore,...setting.pathStore]\"\n        :text=\"setting.text\"\n        :type=\"setting.type\"\n        :unit=\"setting.unit\"\n        :step=\"setting.step\"\n        :key=\"`setting-component-${text}-${index}`\"\n      />\n    </template>\n  </v-list-group>\n</template>\n\n<script>\n// import { mapState } from \"vuex\";\nimport SettingComponent from \"@/components/SettingComponent\";\nexport default {\n  name: \"SettingGroupComponent\",\n  components: {\n    SettingComponent,\n  },\n  props: {\n    pathStore: {\n      type: Array,\n      default: () => [],\n    },\n    text: {\n      type: String,\n      default: \"\",\n    },\n    settings: {\n      type: Array,\n      default: () => [],\n    },\n  },\n};\n</script>"]}]}