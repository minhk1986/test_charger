{"remainingRequest":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robotics/AnhNV/agv-dasboard/src/views/dashboard/Setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robotics/AnhNV/agv-dasboard/src/views/dashboard/Setting.vue","mtime":1609149486052},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1602053610019},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js","mtime":1602053621134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzIH0gZnJvbSAidnVleCI7CmltcG9ydCBTZXR0aW5nQ29tcG9uZW50IGZyb20gIkAvY29tcG9uZW50cy9TZXR0aW5nQ29tcG9uZW50IjsKaW1wb3J0IFNldHRpbmdHcm91cENvbXBvbmVudCBmcm9tICJAL2NvbXBvbmVudHMvU2V0dGluZ0dyb3VwQ29tcG9uZW50IjsKY29uc3QgeyBtYXBTdGF0ZSB9ID0gY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMoInNldHRpbmdzIik7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2V0dGluZyIsCiAgY29tcG9uZW50czogewogICAgU2V0dGluZ0NvbXBvbmVudCwKICAgIFNldHRpbmdHcm91cENvbXBvbmVudCwKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZSh7CiAgICAgIHNldHRpbmdNZXRhOiAoc3RhdGUpID0+IHN0YXRlLnNldHRpbmdzLAogICAgfSksCiAgfSwKfTsK"},{"version":3,"sources":["Setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Setting.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row>\n      <v-col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\">\n        <v-list>\n          <template v-for=\"(setting, index) in settingMeta\">\n            <SettingGroupComponent\n              v-if=\"setting.type === 'group'\"\n              :key=\"`setting-group-${setting.text}-${index}`\"\n              :pathStore=\"[...setting.pathStore]\"\n              :text=\"setting.text\"\n              :settings=\"setting.settings\"\n            />\n            <SettingComponent\n              v-else\n              :pathStore=\"[...setting.pathStore]\"\n              :text=\"setting.text\"\n              :type=\"setting.type\"\n              :unit=\"setting.unit\"\n              :step=\"setting.step\"\n              :key=\"`setting-component-${setting.text}-${index}`\"\n            />\n          </template>\n        </v-list>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { createNamespacedHelpers } from \"vuex\";\nimport SettingComponent from \"@/components/SettingComponent\";\nimport SettingGroupComponent from \"@/components/SettingGroupComponent\";\nconst { mapState } = createNamespacedHelpers(\"settings\");\nexport default {\n  name: \"Setting\",\n  components: {\n    SettingComponent,\n    SettingGroupComponent,\n  },\n  computed: {\n    ...mapState({\n      settingMeta: (state) => state.settings,\n    }),\n  },\n};\n</script>\n"]}]}