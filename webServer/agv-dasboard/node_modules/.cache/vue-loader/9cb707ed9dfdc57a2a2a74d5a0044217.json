{"remainingRequest":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robotics/AnhNV/agv-dasboard/src/layouts/dashboard/AppBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robotics/AnhNV/agv-dasboard/src/layouts/dashboard/AppBar.vue","mtime":1609149482348},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/thread-loader/dist/cjs.js","mtime":1602053610301},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1602053610019},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js","mtime":1602053621134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzIH0gZnJvbSAidnVleCI7Cgpjb25zdCB7bWFwQWN0aW9uczogZGFzaGJvYXJkTWFwQWN0aW9ucywgfSA9IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzKCJkYXNoYm9hcmQiKTsKY29uc3Qge21hcFN0YXRlOiBuYXZpZ2F0aW9uTWFwU3RhdGUsIH0gPSBjcmVhdGVOYW1lc3BhY2VkSGVscGVycygibmF2aWdhdGlvbiIpOwpjb25zdCB7IG1hcFN0YXRlOiBhZ3ZzTWFwU3RhdGUgfSA9IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzKCJhZ3ZzIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcEJhciIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJvc0Nvbm5lY3RJY29uOiAibWRpLWNsb3NlIiwKICAgICAgcm9zQ29ubmVjdENvbG9yOiAicmVkIGRhcmtlbi0xIiwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5kYXNoYm9hcmRNYXBBY3Rpb25zKHsKICAgICAgdG9nZ2xlTmF2aWdhdGlvbk1lbnU6ICJ0b2dnbGVOYXZpZ2F0aW9uTWVudSIsCiAgICB9KSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5uYXZpZ2F0aW9uTWFwU3RhdGUoewogICAgICBuYXZpZ2F0aW9uQWd2SWQ6IChzdGF0ZSkgPT4gc3RhdGUuYWd2SWQsCiAgICB9KSwKICAgIC4uLmFndnNNYXBTdGF0ZSh7CiAgICAgIGlzUm9zQ29ubmVjdGVkKHN0YXRlKSB7CiAgICAgICAgbGV0IGFndiA9IHN0YXRlLmZpbmQoYSA9PiBhLmlkID09PSB0aGlzLm5hdmlnYXRpb25BZ3ZJZCk7CiAgICAgICAgcmV0dXJuIGFndiAhPSBudWxsID8gYWd2LnJvc0Nvbm50ZWN0aW9uU3RhdGUgOiAgZmFsc2U7CiAgICAgIH0sCiAgICB9KSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5pc1Jvc0Nvbm5lY3RlZCkgewogICAgICB0aGlzLnJvc0Nvbm5lY3RJY29uID0gIm1kaS1jaGVjayI7CiAgICAgIHRoaXMucm9zQ29ubmVjdENvbG9yID0gImdyZWVuIGRhcmtlbi0xIjsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucm9zQ29ubmVjdEljb24gPSAibWRpLWNsb3NlIjsKICAgICAgdGhpcy5yb3NDb25uZWN0Q29sb3IgPSAicmVkIGRhcmtlbi0xIjsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpc1Jvc0Nvbm5lY3RlZCh2YWwpIHsKICAgICAgaWYgKHZhbCkgewogICAgICAgIHRoaXMucm9zQ29ubmVjdEljb24gPSAibWRpLWNoZWNrIjsKICAgICAgICB0aGlzLnJvc0Nvbm5lY3RDb2xvciA9ICJncmVlbiBkYXJrZW4tMSI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yb3NDb25uZWN0SWNvbiA9ICJtZGktY2xvc2UiOwogICAgICAgIHRoaXMucm9zQ29ubmVjdENvbG9yID0gInJlZCBkYXJrZW4tMSI7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["AppBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppBar.vue","sourceRoot":"src/layouts/dashboard","sourcesContent":["<template>\n  <v-app-bar color=\"primary\" dark app flat dense>\n    <v-app-bar-nav-icon @click=\"() => toggleNavigationMenu(true)\" />\n    <v-toolbar-title class=\"noselect\">AGV ROBOTICS</v-toolbar-title>\n    <v-spacer />\n    <v-badge\n      class=\"mt-2\"\n      :color=\"rosConnectColor\"\n      :icon=\"rosConnectIcon\"\n      overlap\n    >\n      <v-icon large v-text=\"'mdi-robot-mower'\" />\n    </v-badge>\n  </v-app-bar>\n</template>\n\n<script>\nimport { createNamespacedHelpers } from \"vuex\";\n\nconst {mapActions: dashboardMapActions, } = createNamespacedHelpers(\"dashboard\");\nconst {mapState: navigationMapState, } = createNamespacedHelpers(\"navigation\");\nconst { mapState: agvsMapState } = createNamespacedHelpers(\"agvs\");\n\nexport default {\n  name: \"AppBar\",\n  data() {\n    return {\n      rosConnectIcon: \"mdi-close\",\n      rosConnectColor: \"red darken-1\",\n    };\n  },\n  methods: {\n    ...dashboardMapActions({\n      toggleNavigationMenu: \"toggleNavigationMenu\",\n    }),\n  },\n  computed: {\n    ...navigationMapState({\n      navigationAgvId: (state) => state.agvId,\n    }),\n    ...agvsMapState({\n      isRosConnected(state) {\n        let agv = state.find(a => a.id === this.navigationAgvId);\n        return agv != null ? agv.rosConntectionState :  false;\n      },\n    }),\n  },\n  mounted() {\n    if (this.isRosConnected) {\n      this.rosConnectIcon = \"mdi-check\";\n      this.rosConnectColor = \"green darken-1\";\n    } else {\n      this.rosConnectIcon = \"mdi-close\";\n      this.rosConnectColor = \"red darken-1\";\n    }\n  },\n  watch: {\n    isRosConnected(val) {\n      if (val) {\n        this.rosConnectIcon = \"mdi-check\";\n        this.rosConnectColor = \"green darken-1\";\n      } else {\n        this.rosConnectIcon = \"mdi-close\";\n        this.rosConnectColor = \"red darken-1\";\n      }\n    },\n  },\n};\n</script>\n"]}]}