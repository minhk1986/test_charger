{"remainingRequest":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robotics/AnhNV/agv-dasboard/src/components/WayFromTaskToTask/WayFromTaskToTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robotics/AnhNV/agv-dasboard/src/components/WayFromTaskToTask/WayFromTaskToTask.vue","mtime":1609149482292},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/babel-loader/lib/index.js","mtime":1602053610019},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/cache-loader/dist/cjs.js","mtime":1602053610278},{"path":"/home/robotics/AnhNV/agv-dasboard/node_modules/vue-loader/lib/index.js","mtime":1602053621134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzIH0gZnJvbSAidnVleCI7CmNvbnN0IHsgbWFwU3RhdGU6IGFndkpvYnNNYXBTdGF0ZSB9ID0gY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMoImFndkpvYnMiKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJXYXlGcm9tVGFza1RvVGFzayIsCiAgcHJvcHM6IHsKICAgIGpvYklkOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIiIsCiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLmFndkpvYnNNYXBTdGF0ZSh7CiAgICAgIGFndlRhc2tzKHN0YXRlKSB7CiAgICAgICAgbGV0IGpvYiA9IHN0YXRlLmZpbmQoKGopID0+IGouaWQgPT09IHRoaXMuam9iSWQpOwogICAgICAgIHJldHVybiBqb2IgIT0gbnVsbCA/IGpvYi50YXNrcyA6IFtdOwogICAgICB9LAogICAgfSksCiAgfSwKfTsK"},{"version":3,"sources":["WayFromTaskToTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WayFromTaskToTask.vue","sourceRoot":"src/components/WayFromTaskToTask","sourcesContent":["<template>\n  <g>\n    <template v-if=\"agvTasks.length > 0\">\n      <line\n        v-for=\"index in agvTasks.length - 1\"\n        :key=\"`way-${jobId}-${agvTasks[index - 1].id}-${agvTasks[index].id}`\"\n        :x1=\"agvTasks[index - 1].position.x\"\n        :y1=\"agvTasks[index - 1].position.y\"\n        :x2=\"agvTasks[index].position.x\"\n        :y2=\"agvTasks[index].position.y\"\n        stroke-dasharray=\"10,8\"\n        style=\"stroke: rgb(0, 0, 255); stroke-width: 2\"\n      />\n    </template>\n  </g>\n</template>\n<script>\nimport { createNamespacedHelpers } from \"vuex\";\nconst { mapState: agvJobsMapState } = createNamespacedHelpers(\"agvJobs\");\nexport default {\n  name: \"WayFromTaskToTask\",\n  props: {\n    jobId: {\n      type: String,\n      default: \"\",\n    },\n  },\n  computed: {\n    ...agvJobsMapState({\n      agvTasks(state) {\n        let job = state.find((j) => j.id === this.jobId);\n        return job != null ? job.tasks : [];\n      },\n    }),\n  },\n};\n</script>"]}]}